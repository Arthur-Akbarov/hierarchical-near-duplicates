Removes the listener from the collection of listeners (who|that) will be notified when
    Removes the listener from the collection of listeners (who|that) will be notified when .*?the control
        Removes the listener from the collection of listeners (who|that) will be notified when the control
            Removes the listener from the collection of listeners (who|that) will be notified when the control is selected by the user\.
                Removes the listener from the collection of listeners who will be notified when the control is selected by the user\.
                removeSelectionListener[\s\S]*?public void removeSelectionListener\(SelectionListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the control is selected by the user\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?SelectionListener, addSelectionListener\(org\.eclipse\.swt\.events\.SelectionListener\)
                Removes the listener from the collection of listeners that will be notified when the control is selected by the user\.
                removeSelectionListener[\s\S]*?public void removeSelectionListener\(SelectionListener listener\)[\s\S]*?Removes the listener from the collection of listeners (who|that) will be notified when the control is selected by the user\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?SelectionListener, addSelectionListener\(org\.eclipse\.swt\.events\.SelectionListener\)
            Removes the listener from the collection of listeners who will be notified when the control is moved or resized\.
            removeControlListener[\s\S]*?public void removeControlListener\(ControlListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the control is moved or resized\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?ControlListener, addControlListener\(org\.eclipse\.swt\.events\.ControlListener\)
            Removes the listener from the collection of listeners who will be notified when the control is verified\.
            removeVerifyListener[\s\S]*?public void removeVerifyListener\(VerifyListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the control is verified\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?VerifyListener, addVerifyListener\(org\.eclipse\.swt\.events\.VerifyListener\)
            Removes the listener from the collection of listeners who will be notified when the control gains or loses focus\.
            remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the control gains or loses focus\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
        Removes the listener from the collection of listeners who will be notified when .*? events are generated for the control\.
            Removes the listener from the collection of listeners who will be notified when the help events are generated for the control\.
            removeHelpListener[\s\S]*?public void removeHelpListener\(HelpListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the help events are generated for the control\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?HelpListener, addHelpListener\(org\.eclipse\.swt\.events\.HelpListener\)
            Removes the listener from the collection of listeners who will be notified when gesture events are generated for the control\.
            remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when gesture events are generated for the control\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
            Removes the listener from the collection of listeners who will be notified when the arm events are generated for the control\.
            remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the arm events are generated for the control\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
            Removes the listener from the collection of listeners who will be notified when the menu events are generated for the control\.
            remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the menu events are generated for the control\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
    Removes the listener from the collection of listeners who will be notified when .*?the receiver
        Removes the listener from the collection of listeners who will be notified when the receiver
            Removes the listener from the collection of listeners who will be notified when the receiver's text is modified\.
            remove.*?Listener[\s\S]*?public void remove.*?Listener\(.*?Listener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the receiver's text is modified.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?.*?Listener, add.*?Listener\(org\.eclipse\.swt\.events\..*?Listener\)[\s\S]*?[\s\S]*?
            Removes the listener from the collection of listeners who will be notified when the receiver is selected by the user\.
            removeSelectionListener[\s\S]*?public void removeSelectionListener\(SelectionListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the receiver is selected by the user\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?SelectionListener, addSelectionListener\(org\.eclipse\.swt\.events\.SelectionListener\)
            Removes the listener from the collection of listeners who will be notified when the receiver needs to be painted\.
            remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the receiver needs to be painted\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
        Removes the listener from the collection of listeners who will be notified when the user changes the receiver's (value|selection)\.
            Removes the listener from the collection of listeners who will be notified when the user changes the receiver's selection\.
            removeSelectionListener[\s\S]*?public void removeSelectionListener\(SelectionListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the user changes the receiver's selection\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?SelectionListener, addSelectionListener\(.*?SelectionListener\)
            Removes the listener from the collection of listeners who will be notified when the user changes the receiver's value\.
            removeSelectionListener[\s\S]*?public void removeSelectionListener\(SelectionListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the user changes the receiver's value\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?SelectionListener, addSelectionListener\(org\.eclipse\.swt\.events\.SelectionListener\)
        Removes the listener from the collection of listeners who will be notified when items in the receiver are expanded or collapsed\.
        remove\w+Listener[\s\S]*?public void remove\w+Listener\(\w+Listener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when items in the receiver are \w+ed or collapsed\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?\w+Listener, add\w+Listener\(org\.eclipse\.swt\.events\.\w+Listener\)
        Removes the listener from the collection of listeners who will be notified when operations are performed on the receiver\.
        remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when operations are performed on the receiver\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
    Removes the listener from the collection of listeners who will be notified when .*? events?.*? occurs?
        Removes the listener from the collection of listeners who will be notified when an event of the given type occurs
        remove[\s\S]*?(public|protected) void remove.*?\(int eventType,[\s\S]*?Listener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when an event of the given type occurs[\s\S]*?Parameters:[\s\S]*?eventType - the type of event to listen for[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?Listener, .*?add.*?\(int, org\.eclipse\.swt\.widgets\.Listener\)
        Removes the listener from the collection of listeners who will be notified when traversal events occur\.
        remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when traversal events occur\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
        Removes the listener from the collection of listeners who will be notified when touch events occur\.
        remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when touch events occur\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
    Removes the listener from the collection of listeners who will be notified when (the )?mouse
        Removes the listener from the collection of listeners who will be notified when the mouse
        removeMouse.*?Listener[\s\S]*?public void removeMouse.*?Listener\(Mouse.*?Listener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the mouse[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?Mouse.*?Listener, addMouse.*?Listener\(org\.eclipse\.swt\.events\.Mouse.*?Listener\)
        Removes the listener from the collection of listeners who will be notified when mouse buttons are pressed and released\.
        remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when mouse buttons are pressed and released\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
    Removes the listener from the collection of listeners who will be notified when keys are pressed and released on the system keyboard\.
    removeKeyListener[\s\S]*?public void removeKeyListener\(KeyListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when keys are pressed and released on the system keyboard\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?See Also:[\s\S]*?KeyListener, addKeyListener\(org\.eclipse\.swt\.events\.KeyListener\)
    Removes the listener from the collection of listeners who will be notified when the platform-specific context menu trigger has occurred\.
    removeMenuDetectListener[\s\S]*?public void removeMenuDetectListener\(MenuDetectListener listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the platform-specific context menu trigger has occurred\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?SWTException -[\s\S]*?ERROR_WIDGET_DISPOSED - if the receiver has been disposed[\s\S]*?ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver[\s\S]*?since\. :[\s\S]*?3\.3[\s\S]*?See Also:[\s\S]*?MenuDetectListener, addMenuDetectListener\(org\.eclipse\.swt\.events\.MenuDetectListener\)
    Removes the listener from the collection of listeners who will be notified when a drag gesture occurs\.
    remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when a drag gesture occurs\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
    Removes the listener from the collection of listeners who will be notified when image data is either partially or completely loaded\.
    remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when image data is either partially or completely loaded\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
    Removes the listener from the collection of listeners who will be notified when the widget is disposed\.
    remove[\s\S]*?(public|protected) void remove\w+[\s\S]*? listener\)[\s\S]*?Removes the listener from the collection of listeners who will be notified when the widget is disposed\.[\s\S]*?Parameters:[\s\S]*?listener - the listener which should no longer be notified[\s\S]*?Throws:[\s\S]*?java\.lang\.IllegalArgumentException -[\s\S]*?ERROR_NULL_ARGUMENT - if the listener is null[\s\S]*?See Also:
